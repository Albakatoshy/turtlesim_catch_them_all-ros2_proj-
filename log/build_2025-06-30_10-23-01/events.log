[0.000000] (-) TimerEvent: {}
[0.000160] (my_cpp_pkg) JobQueued: {'identifier': 'my_cpp_pkg', 'dependencies': OrderedDict()}
[0.000297] (my_py_pkg) JobQueued: {'identifier': 'my_py_pkg', 'dependencies': OrderedDict()}
[0.000310] (my_cpp_pkg) JobStarted: {'identifier': 'my_cpp_pkg'}
[0.004031] (my_py_pkg) JobStarted: {'identifier': 'my_py_pkg'}
[0.008041] (my_cpp_pkg) JobProgress: {'identifier': 'my_cpp_pkg', 'progress': 'cmake'}
[0.008369] (my_cpp_pkg) JobProgress: {'identifier': 'my_cpp_pkg', 'progress': 'build'}
[0.008849] (my_cpp_pkg) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/abood/ros2_test/build/my_cpp_pkg', '--', '-j16', '-l16'], 'cwd': '/home/abood/ros2_test/build/my_cpp_pkg', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'abood'), ('LC_TIME', 'ar_EG.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/abood'), ('OLDPWD', '/home/abood'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ar_EG.UTF-8'), ('MANAGERPID', '2103'), ('SYSTEMD_EXEC_PID', '2276'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '6106'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/abood/ros2_test/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'abood'), ('JOURNAL_STREAM', '8:19105'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'abood'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/abood/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/abood:@/tmp/.ICE-unix/2242,unix/abood:/tmp/.ICE-unix/2242'), ('INVOCATION_ID', '3b139645e9584d15b99c4f0402a80db4'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ar_EG.UTF-8'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('LC_TELEPHONE', 'ar_EG.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.UCRZ82'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/abood/ros2_test/install/my_py_pkg:/home/abood/ros2_test/install/my_cpp_pkg:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ar_EG.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:06fee33b-d21f-40d1-b6e6-f56eaf58a43f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ar_EG.UTF-8'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'ar_EG.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/abood/ros2_test/build/my_cpp_pkg'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/abood/ros2_test/install/my_py_pkg/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'ar_EG.UTF-8'), ('LC_PAPER', 'ar_EG.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/abood/ros2_test/install/my_cpp_pkg:/home/abood/ros2_test/install/my_py_pkg:/opt/ros/humble')]), 'shell': False}
[0.034376] (my_cpp_pkg) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target subscriber_test\x1b[0m\n'}
[0.034565] (my_cpp_pkg) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target publisher_test\x1b[0m\n'}
[0.042616] (my_cpp_pkg) StdoutLine: {'line': b'[ 33%] Built target cpp_node\n'}
[0.044738] (my_cpp_pkg) StdoutLine: {'line': b'[ 66%] \x1b[32mBuilding CXX object CMakeFiles/subscriber_test.dir/src/subscriber_test.cpp.o\x1b[0m\n'}
[0.044808] (my_cpp_pkg) StdoutLine: {'line': b'[ 83%] Built target publisher_test\n'}
[0.099931] (-) TimerEvent: {}
[0.200165] (-) TimerEvent: {}
[0.300442] (-) TimerEvent: {}
[0.400667] (-) TimerEvent: {}
[0.416805] (my_py_pkg) Command: {'cmd': ['/usr/bin/python3', '-W', 'ignore:setup.py install is deprecated', '-W', 'ignore:easy_install command is deprecated', 'setup.py', 'egg_info', '--egg-base', '../../build/my_py_pkg', 'build', '--build-base', '/home/abood/ros2_test/build/my_py_pkg/build', 'install', '--record', '/home/abood/ros2_test/build/my_py_pkg/install.log', '--single-version-externally-managed', 'install_data'], 'cwd': '/home/abood/ros2_test/src/my_py_pkg', 'env': {'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'abood', 'LC_TIME': 'ar_EG.UTF-8', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/abood', 'OLDPWD': '/home/abood', 'DESKTOP_SESSION': 'ubuntu', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'LC_MONETARY': 'ar_EG.UTF-8', 'MANAGERPID': '2103', 'SYSTEMD_EXEC_PID': '2276', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '6106', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/abood/ros2_test/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'abood', 'JOURNAL_STREAM': '8:19105', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'abood', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/home/abood/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/abood:@/tmp/.ICE-unix/2242,unix/abood:/tmp/.ICE-unix/2242', 'INVOCATION_ID': '3b139645e9584d15b99c4f0402a80db4', 'XDG_MENU_PREFIX': 'gnome-', 'LC_ADDRESS': 'ar_EG.UTF-8', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'IBUS_DISABLE_SNOOPER': '1', 'LC_TELEPHONE': 'ar_EG.UTF-8', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UCRZ82', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/abood/ros2_test/install/my_py_pkg:/home/abood/ros2_test/install/my_cpp_pkg:/opt/ros/humble', 'SHELL': '/bin/bash', 'LC_NAME': 'ar_EG.UTF-8', 'TERMINATOR_UUID': 'urn:uuid:06fee33b-d21f-40d1-b6e6-f56eaf58a43f', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'LC_MEASUREMENT': 'ar_EG.UTF-8', 'GJS_DEBUG_OUTPUT': 'stderr', 'LC_IDENTIFICATION': 'ar_EG.UTF-8', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/abood/ros2_test/build/my_py_pkg', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/abood/ros2_test/build/my_py_pkg/prefix_override:/usr/lib/python3/dist-packages/colcon_core/task/python/colcon_distutils_commands:/home/abood/ros2_test/install/my_py_pkg/lib/python3.10/site-packages:/home/abood/ros2_test/install/my_py_pkg/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'LC_NUMERIC': 'ar_EG.UTF-8', 'LC_PAPER': 'ar_EG.UTF-8', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/abood/ros2_test/install/my_cpp_pkg'}, 'shell': False}
[0.500776] (-) TimerEvent: {}
[0.574848] (my_py_pkg) StdoutLine: {'line': b'running egg_info\n'}
[0.575518] (my_py_pkg) StdoutLine: {'line': b'writing ../../build/my_py_pkg/my_py_pkg.egg-info/PKG-INFO\n'}
[0.575745] (my_py_pkg) StdoutLine: {'line': b'writing dependency_links to ../../build/my_py_pkg/my_py_pkg.egg-info/dependency_links.txt\n'}
[0.575807] (my_py_pkg) StdoutLine: {'line': b'writing entry points to ../../build/my_py_pkg/my_py_pkg.egg-info/entry_points.txt\n'}
[0.575910] (my_py_pkg) StdoutLine: {'line': b'writing requirements to ../../build/my_py_pkg/my_py_pkg.egg-info/requires.txt\n'}
[0.575986] (my_py_pkg) StdoutLine: {'line': b'writing top-level names to ../../build/my_py_pkg/my_py_pkg.egg-info/top_level.txt\n'}
[0.577736] (my_py_pkg) StdoutLine: {'line': b"reading manifest file '../../build/my_py_pkg/my_py_pkg.egg-info/SOURCES.txt'\n"}
[0.578613] (my_py_pkg) StdoutLine: {'line': b"writing manifest file '../../build/my_py_pkg/my_py_pkg.egg-info/SOURCES.txt'\n"}
[0.578686] (my_py_pkg) StdoutLine: {'line': b'running build\n'}
[0.578725] (my_py_pkg) StdoutLine: {'line': b'running build_py\n'}
[0.579029] (my_py_pkg) StdoutLine: {'line': b'running install\n'}
[0.579296] (my_py_pkg) StdoutLine: {'line': b'running install_lib\n'}
[0.580589] (my_py_pkg) StdoutLine: {'line': b'running install_data\n'}
[0.580665] (my_py_pkg) StdoutLine: {'line': b'running install_egg_info\n'}
[0.582089] (my_py_pkg) StdoutLine: {'line': b"removing '/home/abood/ros2_test/install/my_py_pkg/lib/python3.10/site-packages/my_py_pkg-0.0.0-py3.10.egg-info' (and everything under it)\n"}
[0.582182] (my_py_pkg) StdoutLine: {'line': b'Copying ../../build/my_py_pkg/my_py_pkg.egg-info to /home/abood/ros2_test/install/my_py_pkg/lib/python3.10/site-packages/my_py_pkg-0.0.0-py3.10.egg-info\n'}
[0.582975] (my_py_pkg) StdoutLine: {'line': b'running install_scripts\n'}
[0.600860] (-) TimerEvent: {}
[0.602421] (my_py_pkg) StdoutLine: {'line': b'Installing publisher_test script to /home/abood/ros2_test/install/my_py_pkg/lib/my_py_pkg\n'}
[0.602669] (my_py_pkg) StdoutLine: {'line': b'Installing py_node script to /home/abood/ros2_test/install/my_py_pkg/lib/my_py_pkg\n'}
[0.602738] (my_py_pkg) StdoutLine: {'line': b'Installing subsrciber_test script to /home/abood/ros2_test/install/my_py_pkg/lib/my_py_pkg\n'}
[0.602824] (my_py_pkg) StdoutLine: {'line': b"writing list of installed files to '/home/abood/ros2_test/build/my_py_pkg/install.log'\n"}
[0.617676] (my_py_pkg) CommandEnded: {'returncode': 0}
[0.624804] (my_py_pkg) JobEnded: {'identifier': 'my_py_pkg', 'rc': 0}
[0.700956] (-) TimerEvent: {}
[0.801267] (-) TimerEvent: {}
[0.901579] (-) TimerEvent: {}
[1.001878] (-) TimerEvent: {}
[1.102189] (-) TimerEvent: {}
[1.202498] (-) TimerEvent: {}
[1.302786] (-) TimerEvent: {}
[1.403079] (-) TimerEvent: {}
[1.484796] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[1.485014] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.485096] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:64\x1b[m\x1b[K,\n'}
[1.485162] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[1.485227] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[1.485283] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass __gnu_cxx::new_allocator<example_interfaces::msg::String_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.485340] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:124:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.485413] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:995:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.485480] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:425:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.485548] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:216:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = <missing>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.485617] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[1.485677] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:96:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst _Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::const_reference) const [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::const_pointer = example_interfaces::msg::String_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::const_reference = example_interfaces::msg::String_<std::allocator<void> > (&)()]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[K_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::pointer = example_interfaces::msg::String_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::reference = example_interfaces::msg::String_<std::allocator<void> > (&)()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.485747] (my_cpp_pkg) StderrLine: {'line': b'   96 |       \x1b[01;31m\x1b[Kaddress\x1b[m\x1b[K(const_reference __x) const _GLIBCXX_NOEXCEPT\n'}
[1.485808] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.485871] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:92:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[K_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::pointer = example_interfaces::msg::String_<std::allocator<void> > (*)(); __gnu_cxx::new_allocator<_Tp>::reference = example_interfaces::msg::String_<std::allocator<void> > (&)()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.485937] (my_cpp_pkg) StderrLine: {'line': b'   92 |       \x1b[01;36m\x1b[Kaddress\x1b[m\x1b[K(reference __x) const _GLIBCXX_NOEXCEPT\n'}
[1.485993] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[1.491679] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KSubscriberTest::SubscriberTest()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.491822] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:14:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[1.492028] (my_cpp_pkg) StderrLine: {'line': b'   14 |             std::bind(&SubscriberTest::sub_callback , this ,_1) \x1b[01;31m\x1b[K)\x1b[m\x1b[K ;\n'}
[1.492094] (my_cpp_pkg) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.492157] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[1.492214] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[1.492272] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[1.492331] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.492393] (my_cpp_pkg) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[1.492462] (my_cpp_pkg) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.492522] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.492582] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >&; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.492650] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.492713] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:14:65:\x1b[m\x1b[K   required from here\n'}
[1.492775] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.492831] (my_cpp_pkg) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[1.492893] (my_cpp_pkg) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.492947] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.493007] (my_cpp_pkg) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[1.493064] (my_cpp_pkg) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.493121] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.493178] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:14:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.493241] (my_cpp_pkg) StderrLine: {'line': b'   14 |             std::bind(&SubscriberTest::sub_callback , this ,_1) \x1b[01;36m\x1b[K)\x1b[m\x1b[K ;\n'}
[1.493298] (my_cpp_pkg) StderrLine: {'line': b'      |                                                                 \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.493356] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[1.493417] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[1.493470] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[1.493526] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.493586] (my_cpp_pkg) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[1.493646] (my_cpp_pkg) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.493704] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.493768] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.493835] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.493904] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:14:65:\x1b[m\x1b[K   required from here\n'}
[1.493982] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.494048] (my_cpp_pkg) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[1.494114] (my_cpp_pkg) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.494172] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.494235] (my_cpp_pkg) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[1.494294] (my_cpp_pkg) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.494352] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.494416] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:14:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.494483] (my_cpp_pkg) StderrLine: {'line': b'   14 |             std::bind(&SubscriberTest::sub_callback , this ,_1) \x1b[01;36m\x1b[K)\x1b[m\x1b[K ;\n'}
[1.494540] (my_cpp_pkg) StderrLine: {'line': b'      |                                                                 \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.494600] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[1.494658] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[1.494718] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[1.494777] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.494839] (my_cpp_pkg) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[1.494898] (my_cpp_pkg) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.494953] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.495014] (my_cpp_pkg) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[1.495082] (my_cpp_pkg) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.495135] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.495195] (my_cpp_pkg) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[1.495251] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.495310] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.495378] (my_cpp_pkg) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[1.495446] (my_cpp_pkg) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.503147] (-) TimerEvent: {}
[1.603408] (-) TimerEvent: {}
[1.703717] (-) TimerEvent: {}
[1.761555] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[1.761782] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.761925] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.761963] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.761998] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.762032] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.762066] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.762100] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.762133] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.762166] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.762199] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[1.762232] (my_cpp_pkg) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.762268] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762387] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762570] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762672] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762778] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[1.762835] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<example_interfaces::msg::String_<std::allocator<void> >(), std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[1.762918] (my_cpp_pkg) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[1.762981] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.763042] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[1.763136] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.763201] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.763255] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.763311] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.763366] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.763429] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.763489] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.763546] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.763604] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.763665] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[1.763720] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.763803] (my_cpp_pkg) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[1.763859] (my_cpp_pkg) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.763915] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.763971] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.764054] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764245] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764312] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764382] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764463] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764530] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764597] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[1.764654] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764712] (my_cpp_pkg) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[1.764764] (my_cpp_pkg) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.764821] (my_cpp_pkg) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.764882] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.764976] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765054] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765118] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765183] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[1.765240] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765314] (my_cpp_pkg) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[1.765372] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.765437] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<example_interfaces::msg::String_<std::allocator<void> >(), std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765515] (my_cpp_pkg) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[1.765571] (my_cpp_pkg) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.765630] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765706] (my_cpp_pkg) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[1.765765] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.765822] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<example_interfaces::msg::String_<std::allocator<void> >(), std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.765900] (my_cpp_pkg) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[1.765959] (my_cpp_pkg) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.803797] (-) TimerEvent: {}
[1.904065] (-) TimerEvent: {}
[2.004371] (-) TimerEvent: {}
[2.064349] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/variant: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool std::holds_alternative(const std::variant<_Types ...>&) [with _Tp = std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>; _Types = {std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.064623] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:938:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.064696] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/resolve_intra_process_buffer_type.hpp:40:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::IntraProcessBufferType rclcpp::detail::resolve_intra_process_buffer_type(rclcpp::IntraProcessBufferType, const rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>&) [with CallbackMessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.064807] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:218:42:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::Subscription(rclcpp::node_interfaces::NodeBaseInterface*, const rosidl_message_type_support_t&, const string&, const rclcpp::QoS&, rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; rosidl_message_type_support_t = rosidl_message_type_support_t; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr = std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.064916] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.064987] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.065064] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[2.065126] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:110:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic std::shared_ptr<rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT> > rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::make_shared(Args&& ...) [with Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.065193] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:107:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.065263] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.065341] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.065414] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.065482] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[2.065541] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1111:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: T must occur exactly once in alternatives\n'}
[2.065601] (my_cpp_pkg) StderrLine: {'line': b' 1111 |       static_assert(\x1b[01;31m\x1b[K__detail::__variant::__exactly_once<_Tp, _Types...>\x1b[m\x1b[K,\n'}
[2.065659] (my_cpp_pkg) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.065716] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1111:42:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::__detail::__variant::__exactly_once<std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[2.066430] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/variant: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool std::holds_alternative(const std::variant<_Types ...>&) [with _Tp = std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>; _Types = {std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.066571] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:939:61:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kconstexpr bool rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::use_take_shared_method() const [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.066694] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/detail/resolve_intra_process_buffer_type.hpp:40:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::IntraProcessBufferType rclcpp::detail::resolve_intra_process_buffer_type(rclcpp::IntraProcessBufferType, const rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>&) [with CallbackMessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.066845] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:218:42:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::Subscription(rclcpp::node_interfaces::NodeBaseInterface*, const rosidl_message_type_support_t&, const string&, const rclcpp::QoS&, rclcpp::AnySubscriptionCallback<CallbackMessageT, AllocatorT>, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; rosidl_message_type_support_t = rosidl_message_type_support_t; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::SubscriptionTopicStatisticsSharedPtr = std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.066919] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.066992] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; _Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; _Tp = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.067068] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[2.067130] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:110:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic std::shared_ptr<rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT> > rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::make_shared(Args&& ...) [with Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.067201] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:107:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.067272] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.067343] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.067422] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.067494] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[2.067553] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1111:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: T must occur exactly once in alternatives\n'}
[2.067611] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1111:42:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::__detail::__variant::__exactly_once<std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)())>, std::function<void(example_interfaces::msg::String_<std::allocator<void> > (&)(), const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >)>, std::function<void(std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&)>, std::function<void(const std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>)>, std::function<void(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[2.104464] (-) TimerEvent: {}
[2.204740] (-) TimerEvent: {}
[2.305045] (-) TimerEvent: {}
[2.405338] (-) TimerEvent: {}
[2.505637] (-) TimerEvent: {}
[2.559692] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:76\x1b[m\x1b[K,\n'}
[2.559878] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[2.560020] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[2.560083] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/bits/unique_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = example_interfaces::msg::String_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.560146] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/unique_ptr.h:361:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); _Dp = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560205] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_construct.h:151:22:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kconstexpr void std::_Destroy(_Tp*) [with _Tp = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560263] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_construct.h:163:19:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >*; bool <anonymous> = false]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560332] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_construct.h:196:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >*]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560393] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:848:15:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >*; _Tp = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560489] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/stl_vector.h:680:15:\x1b[m\x1b[K   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[2.560547] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:110:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic std::shared_ptr<rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT> > rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::make_shared(Args&& ...) [with Args = {rclcpp::node_interfaces::NodeBaseInterface*&, const rosidl_message_type_support_t&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&, const rclcpp::AnySubscriptionCallback<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >&, const rclcpp::SubscriptionOptionsWithAllocator<std::allocator<void> >&, const std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >&, const std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<example_interfaces::msg::String_<std::allocator<void> >()> >&}; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560625] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:107:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560688] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = example_interfaces::msg::String_<std::allocator<void> >(); std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560745] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560799] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); CallbackT = std::_Bind<void (SubscriberTest::*(SubscriberTest*, std::_Placeholder<1>))(std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void>, example_interfaces::msg::String_<std::allocator<void> >(), example_interfaces::msg::String_<std::allocator<void> >(), rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560861] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:12:83:\x1b[m\x1b[K   required from here\n'}
[2.560914] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/unique_ptr.h:85:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot delete a function.  Only pointer-to-objects are valid arguments to \xe2\x80\x98\x1b[01m\x1b[Kdelete\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.560971] (my_cpp_pkg) StderrLine: {'line': b'   85 |         delete \x1b[01;31m\x1b[K__ptr\x1b[m\x1b[K;\n'}
[2.561023] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.598572] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[2.598752] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.598830] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.598894] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.598956] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.599019] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.599079] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.599142] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.599200] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[2.599256] (my_cpp_pkg) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<void> rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::create_message() [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.599332] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:311:3:\x1b[m\x1b[K   required from here\n'}
[2.599393] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:317:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert \xe2\x80\x98\x1b[01m\x1b[Krclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >::borrow_message()\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Kshared_ptr<\x1b[01;32m\x1b[Kexample_interfaces::msg::String_<std::allocator<void> >()\x1b[m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kshared_ptr<\x1b[01;32m\x1b[Kvoid\x1b[m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.599468] (my_cpp_pkg) StderrLine: {'line': b'  317 |     return message_memory_strategy_->borrow_message(\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.599526] (my_cpp_pkg) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.599582] (my_cpp_pkg) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[2.599638] (my_cpp_pkg) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[Kshared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>\x1b[m\x1b[K\n'}
[2.600437] (my_cpp_pkg) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::handle_loaned_message(void*, const rclcpp::MessageInfo&) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.600586] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:364:3:\x1b[m\x1b[K   required from here\n'}
[2.600655] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:374:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid \xe2\x80\x98\x1b[01m\x1b[Kstatic_cast\x1b[m\x1b[K\xe2\x80\x99 from type \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 to type \xe2\x80\x98\x1b[01m\x1b[Kexample_interfaces::msg::String_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.600722] (my_cpp_pkg) StderrLine: {'line': b'  374 |     auto typed_message = \x1b[01;31m\x1b[Kstatic_cast<ROSMessageType *>(loaned_message)\x1b[m\x1b[K;\n'}
[2.600783] (my_cpp_pkg) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.605700] (-) TimerEvent: {}
[2.615887] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[2.616024] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[2.616089] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[2.616148] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::static_pointer_cast(const std::shared_ptr<_Tp>&) [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); _Up = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.616211] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:336:66:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Subscription<MessageT, AllocatorT, SubscribedT, ROSMessageT, MessageMemoryStrategyT>::handle_message(std::shared_ptr<void>&, const rclcpp::MessageInfo&) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); AllocatorT = std::allocator<void>; SubscribedT = example_interfaces::msg::String_<std::allocator<void> >(); ROSMessageT = example_interfaces::msg::String_<std::allocator<void> >(); MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.616273] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:327:3:\x1b[m\x1b[K   required from here\n'}
[2.616328] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:585:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid \xe2\x80\x98\x1b[01m\x1b[Kstatic_cast\x1b[m\x1b[K\xe2\x80\x99 from type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<void, __gnu_cxx::_S_atomic>::element_type*\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99} to type \xe2\x80\x98\x1b[01m\x1b[Kexample_interfaces::msg::String_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.616400] (my_cpp_pkg) StderrLine: {'line': b'  585 |       return _Sp(__r, \x1b[01;31m\x1b[Kstatic_cast<typename _Sp::element_type*>(__r.get())\x1b[m\x1b[K);\n'}
[2.616470] (my_cpp_pkg) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.664220] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[2.664454] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[2.664538] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:64\x1b[m\x1b[K,\n'}
[2.664598] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[2.664657] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[2.664716] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[K_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.664776] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:464:28:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); std::allocator_traits<std::allocator<_Tp1> >::pointer = example_interfaces::msg::String_<std::allocator<void> > (*)(); std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; std::allocator_traits<std::allocator<_Tp1> >::size_type = long unsigned int]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.664837] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:168:44:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared_impl(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with DestinationT = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; MessageDeleter = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; BufferT = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >; typename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type = void; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.664908] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:108:29:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; MessageDeleter = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; BufferT = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.664977] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:106:8:\x1b[m\x1b[K   required from here\n'}
[2.665035] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:124:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid \xe2\x80\x98\x1b[01m\x1b[Kstatic_cast\x1b[m\x1b[K\xe2\x80\x99 from type \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 to type \xe2\x80\x98\x1b[01m\x1b[Kexample_interfaces::msg::String_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.665099] (my_cpp_pkg) StderrLine: {'line': b'  124 |             return \x1b[01;31m\x1b[Kstatic_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al))\x1b[m\x1b[K;\n'}
[2.665160] (my_cpp_pkg) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.665217] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:127:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid \xe2\x80\x98\x1b[01m\x1b[Kstatic_cast\x1b[m\x1b[K\xe2\x80\x99 from type \xe2\x80\x98\x1b[01m\x1b[Kvoid*\x1b[m\x1b[K\xe2\x80\x99 to type \xe2\x80\x98\x1b[01m\x1b[Kexample_interfaces::msg::String_<std::allocator<void> > (*)()\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.665277] (my_cpp_pkg) StderrLine: {'line': b'  127 |         return \x1b[01;31m\x1b[Kstatic_cast<_Tp*>(::operator new(__n * sizeof(_Tp)))\x1b[m\x1b[K;\n'}
[2.665335] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.665392] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = example_interfaces::msg::String_<std::allocator<void> >(); _Args = {example_interfaces::msg::String_<std::allocator<void> > (&)()}; _Tp = example_interfaces::msg::String_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.665460] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = example_interfaces::msg::String_<std::allocator<void> >(); _Args = {example_interfaces::msg::String_<std::allocator<void> > (&)()}; _Tp = example_interfaces::msg::String_<std::allocator<void> >(); std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.665527] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:169:34:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared_impl(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with DestinationT = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >; MessageT = example_interfaces::msg::String_<std::allocator<void> >(); Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; MessageDeleter = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; BufferT = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >; typename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type = void; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.665597] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:108:29:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; MessageDeleter = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; BufferT = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.665663] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:106:8:\x1b[m\x1b[K   required from here\n'}
[2.665723] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Knew cannot be applied to a function type\n'}
[2.665774] (my_cpp_pkg) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[2.665830] (my_cpp_pkg) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.666443] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_iterator.h:67\x1b[m\x1b[K,\n'}
[2.666546] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:67\x1b[m\x1b[K,\n'}
[2.666593] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:63\x1b[m\x1b[K,\n'}
[2.666643] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[2.666698] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[2.666752] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/bits/ptr_traits.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr _Tp* std::__to_address(_Tp*) [with _Tp = example_interfaces::msg::String_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.666799] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1191:29:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = example_interfaces::msg::String_<std::allocator<void> >(); _Del = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; <template-parameter-2-3> = void; _Tp = example_interfaces::msg::String_<std::allocator<void> >(); __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.666853] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:341:36:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = example_interfaces::msg::String_<std::allocator<void> >(); _Del = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; <template-parameter-2-3> = void; _Tp = example_interfaces::msg::String_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.666902] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:113:21:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_unique(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageUniquePtr) [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; MessageDeleter = std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()>; BufferT = std::shared_ptr<example_interfaces::msg::String_<std::allocator<void> >()>; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageUniquePtr = std::unique_ptr<example_interfaces::msg::String_<std::allocator<void> >(), std::default_delete<example_interfaces::msg::String_<std::allocator<void> >()> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.666962] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:111:8:\x1b[m\x1b[K   required from here\n'}
[2.667017] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/ptr_traits.h:161:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: not a function pointer\n'}
[2.667071] (my_cpp_pkg) StderrLine: {'line': b'  161 |       static_assert(\x1b[01;31m\x1b[K!std::is_function<_Tp>::value\x1b[m\x1b[K, "not a function pointer");\n'}
[2.667126] (my_cpp_pkg) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.667182] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/ptr_traits.h:161:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K!(bool)std::integral_constant<bool, true>::value\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[2.705786] (-) TimerEvent: {}
[2.712163] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:60\x1b[m\x1b[K,\n'}
[2.712274] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:53\x1b[m\x1b[K,\n'}
[2.712336] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[2.712390] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[2.712453] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abood/ros2_test/src/my_cpp_pkg/src/subscriber_test.cpp:1\x1b[m\x1b[K:\n'}
[2.712501] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/ext/aligned_buffer.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct __gnu_cxx::__aligned_buffer<example_interfaces::msg::String_<std::allocator<void> >()>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.712555] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:506:35:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::_Sp_counted_ptr_inplace<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>, __gnu_cxx::_S_atomic>::_Impl\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712619] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:567:13:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::_Sp_counted_ptr_inplace<example_interfaces::msg::String_<std::allocator<void> >(), std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712678] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:647:43:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); _Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; _Args = {}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712740] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; _Args = {}; _Tp = example_interfaces::msg::String_<std::allocator<void> >(); __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712803] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:409:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; _Args = {}; _Tp = example_interfaces::msg::String_<std::allocator<void> >()]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712862] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:862:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = example_interfaces::msg::String_<std::allocator<void> >(); _Alloc = std::allocator<example_interfaces::msg::String_<std::allocator<void> >()>; _Args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712920] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/message_memory_strategy.hpp:87:56:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = example_interfaces::msg::String_<std::allocator<void> >(); Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.712977] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[2.713034] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/aligned_buffer.h:91:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert template argument \xe2\x80\x98\x1b[01m\x1b[Ksizeof (example_interfaces::msg::String_<std::allocator<void> >())\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.713096] (my_cpp_pkg) StderrLine: {'line': b'   91 |     : std::aligned_storage<\x1b[01;31m\x1b[Ksizeof(_Tp)\x1b[m\x1b[K, __alignof__(_Tp)>\n'}
[2.713153] (my_cpp_pkg) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.713209] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/aligned_buffer.h:91:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert template argument \xe2\x80\x98\x1b[01m\x1b[Ksizeof (example_interfaces::msg::String_<std::allocator<void> >())\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.805899] (-) TimerEvent: {}
[2.834800] (my_cpp_pkg) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/subscriber_test.dir/build.make:76: CMakeFiles/subscriber_test.dir/src/subscriber_test.cpp.o] Error 1\n'}
[2.834983] (my_cpp_pkg) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:193: CMakeFiles/subscriber_test.dir/all] Error 2\n'}
[2.835140] (my_cpp_pkg) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[2.836878] (my_cpp_pkg) CommandEnded: {'returncode': 2}
[2.842049] (my_cpp_pkg) JobEnded: {'identifier': 'my_cpp_pkg', 'rc': 2}
[2.868773] (-) EventReactorShutdown: {}
